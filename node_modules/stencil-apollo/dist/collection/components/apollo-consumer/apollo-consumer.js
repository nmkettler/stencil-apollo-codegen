import { ApolloProviderConsumer } from "../../utils/apollo-client-state";
export class ApolloMutationComponent {
    render() {
        return this.renderer(this.client);
    }
    static get is() { return "apollo-consumer"; }
    static get properties() { return {
        "client": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ApolloClient<any>",
                "resolved": "ApolloClient<any>",
                "references": {
                    "ApolloClient": {
                        "location": "import",
                        "path": "apollo-client"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "renderer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ConsumerRenderer",
                "resolved": "(client: ApolloClient<any>) => Element | Element[]",
                "references": {
                    "ConsumerRenderer": {
                        "location": "import",
                        "path": "../../utils"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
    static get elementRef() { return "el"; }
}
ApolloProviderConsumer.injectProps(ApolloMutationComponent, ['client']);
