{"moduleFile":{"sourceFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/all-posts/all-posts.tsx","jsFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/all-posts/all-posts.js","cmps":[{"isLegacy":false,"tagName":"apollo-all-posts","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"AllPostsComponent","elementRef":null,"encapsulation":"none","properties":[{"name":"renderer","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"import('stencil-apollo').QueryRenderer<AllPostsQuery, AllPostsQueryVariables>","resolved":"(result: QueryResult<{ __typename?: \"Query\"; } & { agents: ({ __typename?: \"Post\"; } & Pick<Post, \"name\" | \"agent_online\">)[]; }, AllPostsQueryVariables>) => Element | Element[]","references":{"AllPostsQuery":{"location":"local"},"AllPostsQueryVariables":{"location":"local"}}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/all-posts/all-posts.js","sourceFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/all-posts/all-posts.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":false,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["query","renderer"],"htmlTagNames":["apollo-query"],"isUpdateable":true,"potentialCmpRefs":["apollo-query"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core","@stencil/state-tunnel","graphql-tag","stencil-apollo"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["stencil-apollo","@stencil/core","graphql-tag"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport gql from 'graphql-tag';\r\nconst AGENT_QUERY = gql `\n  query AgentQuery {\n    agents {\n        name,\n        agent_online,\n        id,\n        newAgentName\n    }\n  }\n`;\r\n//  const AllPostsDocument: DocumentNode = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allPosts\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"posts\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"votes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"author\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]};\r\n// export class AllPostsComponent {\r\n//     @Prop() renderer: import('stencil-apollo').QueryRenderer<AllPostsQuery, AllPostsQueryVariables>;\r\n//     render() {\r\n//         return <apollo-query query={AllPostsDocument } renderer={ this.renderer } />;\r\n//     }\r\n// }\r\nexport class AllPostsComponent {\r\n    render() {\r\n        return h(\"apollo-query\", { query: AGENT_QUERY, renderer: this.renderer });\r\n    }\r\n    static get is() { return \"apollo-all-posts\"; }\r\n    static get properties() { return {\r\n        \"renderer\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"import('stencil-apollo').QueryRenderer<AllPostsQuery, AllPostsQueryVariables>\",\r\n                \"resolved\": \"(result: QueryResult<{ __typename?: \\\"Query\\\"; } & { agents: ({ __typename?: \\\"Post\\\"; } & Pick<Post, \\\"name\\\" | \\\"agent_online\\\">)[]; }, AllPostsQueryVariables>) => Element | Element[]\",\r\n                \"references\": {\r\n                    \"AllPostsQuery\": {\r\n                        \"location\": \"local\"\r\n                    },\r\n                    \"AllPostsQueryVariables\": {\r\n                        \"location\": \"local\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        }\r\n    }; }\r\n}\r\n"}