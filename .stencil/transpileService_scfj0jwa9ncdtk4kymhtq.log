{"moduleFile":{"sourceFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/my-component-with-codegen/my-component-with-codegen.tsx","jsFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/my-component-with-codegen/my-component-with-codegen.js","cmps":[{"isLegacy":false,"tagName":"my-component-with-codegen","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"MyComponentWithCodegen","elementRef":null,"encapsulation":"none","properties":[{"name":"first","type":"string","attribute":"first","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"last","type":"string","attribute":"last","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"MY-COMPONENT-WITH-CODEGEN","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/my-component-with-codegen/my-component-with-codegen.css","relativePath":"my-component-with-codegen.css","originalComponentPath":"my-component-with-codegen.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/my-component-with-codegen/my-component-with-codegen.js","sourceFilePath":"/Users/nkettler/projects/Cisco/core_infrastructure/src/components/my-component-with-codegen/my-component-with-codegen.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":true,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["renderer","onClick","client","query"],"htmlTagNames":["apollo-upvote-post","button","div","apollo-provider","apollo-query","p"],"isUpdateable":true,"potentialCmpRefs":["apollo-upvote-post","apollo-provider","apollo-query"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core","apollo-boost","graphql-tag"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","apollo-boost","graphql-tag"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport gql from 'graphql-tag';\r\n// import { ApolloProvider, Query, Mutation } from 'stencil-apollo';\r\nconst client = new ApolloClient({\r\n    // uri: 'https://graphql-voter-app.herokuapp.com/'\r\n    uri: 'http://localhost:5000/graphql'\r\n});\r\nconst LAUNCHES_QUERY = gql `\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\r\n// const ALL_POSTS_QUERY = gql`\r\n//   query allPosts {\r\n//     posts {\r\n//       id\r\n//       title\r\n//       votes\r\n//       author {\r\n//         id\r\n//         firstName\r\n//         lastName\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\nexport class MyComponentWithCodegen {\r\n    renderUpvoteButton(postId) {\r\n        return (h(\"apollo-upvote-post\", { renderer: upvotePost => h(\"button\", { onClick: () => upvotePost({ variables: { postId } }) }, \"Upvote\") }));\r\n    }\r\n    renderTestButton() {\r\n        return (h(\"div\", null, \"Test Text\"));\r\n    }\r\n    render() {\r\n        return (h(\"apollo-provider\", { client: client },\r\n            h(\"apollo-query\", { query: LAUNCHES_QUERY },  =\r\n                ({ data, loading }) => {\r\n                    console.log(data);\r\n                    if (loading) {\r\n                        return 'Loading';\r\n                    }\r\n                    return h(\"p\", null, \"data\");\r\n                })));\r\n    }\r\n    static get is() { return \"my-component-with-codegen\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"my-component-with-codegen.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"my-component-with-codegen.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"first\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"first\",\r\n            \"reflect\": false\r\n        },\r\n        \"last\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"last\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n}\r\n"}